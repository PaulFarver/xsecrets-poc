apiVersion: v1
kind: Namespace
metadata:
  name: vault
---
# helm repo add hashicorp https://helm.releases.hashicorp.com
# Rendered with 
# helm template vault hashicorp/vault --set "server.enabled=false" --set "server.dev.enabled=true" --set "injector.enabled=false" --set "csi.enabled=true" --namespace vault
# Source: vault/templates/csi-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-csi-provider
  namespace: vault
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
---
# Source: vault/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: vault
  labels:
    helm.sh/chart: vault-0.21.0
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
---
# Source: vault/templates/csi-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-csi-provider-clusterrole
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
---
# Source: vault/templates/csi-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-csi-provider-clusterrolebinding
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-csi-provider-clusterrole
subjects:
- kind: ServiceAccount
  name: vault-csi-provider
  namespace: vault
---
# Source: vault/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
  labels:
    helm.sh/chart: vault-0.21.0
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: vault
  namespace: vault
---
# Source: vault/templates/csi-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vault-csi-provider
  namespace: vault
  labels:
    app.kubernetes.io/name: vault-csi-provider
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-csi-provider
      app.kubernetes.io/instance: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-csi-provider
        app.kubernetes.io/instance: vault
    spec:
      
      serviceAccountName: vault-csi-provider
      containers:
        - name: vault-csi-provider
          
          
          image: "hashicorp/vault-csi-provider:1.2.0"
          imagePullPolicy: IfNotPresent
          args:
            - --endpoint=/provider/vault.sock
            - --debug=false
          env:
            - name: VAULT_ADDR
              value: http://vault.vault.svc:8200
          volumeMounts:
            - name: providervol
              mountPath: "/provider"
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: HostToContainer
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
      volumes:
        - name: providervol
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
